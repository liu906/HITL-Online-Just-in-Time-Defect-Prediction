colors = c('red','blue','green')
class(colors)
colors.f = factor('red','blue','green')
class(colors.f)
str(Dragons)
Dragons = read.table(header=TRUE, text="
Tribe       Length.m  SizeRank
IceWings    6.4       1
MudWings    6.1       2
SeaWings    5.8       3
SkyWings    5.5       4
NightWings  5.2       5
RainWings   4.9       6
SandWings   4.6       7
")
str(Dragons)
class(colors)
Dragons$SizeRank.f = factor(Dragons$SizeRank,
ordered = TRUE,
levels = c("1", "2", "3", "4", "5", "6", "7"))
str(Dragons)
sapply(Dragons, class)
if(!require(psych)){install.packages("psych")}
if(!require(DescTools)){install.packages("DescTools")}
if(!require(Rmisc)){install.packages("Rmisc")}
if(!require(FSA)){install.packages("FSA")}
if(!require(plyr)){install.packages("plyr")}
if(!require(boot)){install.packages("boot")}
Input = ("
Instructor  Location  Attendees
Ren         North      7
Ren         North     22
Ren         North      6
Ren         North     15
Ren         South     12
Ren         South     13
Ren         South     14
Ren         South     16
Stimpy      North     18
Stimpy      North     17
Stimpy      North     15
Stimpy      North      9
Stimpy      South     15
Stimpy      South     11
Stimpy      South     19
Stimpy      South     23
")
Data = read.table(textConnection(Input),header=TRUE)
Data
str(Data)
summary(Data)
if(!require(Rmisc)){install.packages("Rmisc")}
if(!require(DescTools)){install.packages("DescTools")}
if(!require(plyr)){install.packages("plyr")}
if(!require(boot)){install.packages("boot")}
if(!require(rcompanion)){install.packages("rcompanion")}
if(!require(Rmisc)){install.packages("Rmisc")}
if(!require(DescTools)){install.packages("DescTools")}
if(!require(plyr)){install.packages("plyr")}
if(!require(boot)){install.packages("boot")}
if(!require(rcompanion)){install.packages("rcompanion")}
?cor
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
file.path('../moaGUIresult/camelDumpFile_delayedCV_10fold_detail.csv')
file_path = file.path('../moaGUIresult/camelDumpFile_delayedCV_10fold_detail.csv')
read.csv(file_path)
df = read.csv(file_path)
folds = unique(df$fold)
folds
file_path = file.path('../moaGUIresult/camelDumpFile_delayedCV_10fold_detail.csv')
df = read.csv(file_path)
folds = unique(df$fold)
folds
colnames(folds)
colnames(df)
df = read.csv(file_path, check.names = FALSE)
df
folds = unique(df$fold)
colnames(df)
indicator = colnames(df)[i]
i = 2
indicator = colnames(df)[i]
df[,indicator]
df[,c(indicator,'fold')]
library(dplyr)
indicator = colnames(df)[i]
sub_df = df[,c(indicator,'fold')]
grouped_sub_df <- sub_df %>%
group_by(fold)
grouped_sub_df
ub_df
sub_df
df$fold =
as.factor(df$fold)
as.factor(df$fold)
df$fold = as.factor(df$fold)
sub_df %>%
group_by(fold)
iris %>%
group_by(Species)
iris
typeof(iris)
typeof(df)
grouped_sub_df <- df %>%
group_by(fold)
df %>%
group_by(fold)
sub_df = df[,c(indicator,'fold')]
indicator = colnames(df)[i]
sub_df = df[,c(indicator,'fold')]
sub_df
df$fold
folds = unique(df$fold)
folds
ifold = folds[1]
ifold
sub_df$fold=ifold
indicator = colnames(df)[i]
sub_df = df[,c(indicator,'fold')]
sub_df$fold==ifold
sub_df[sub_df$fold==ifold,]
sub_df[sub_df$fold==ifold,indicator]
temp_df = sub_df[sub_df$fold==ifold,indicator]
colnames(temp_df) = paste(indicator,fold,sep = '-')
colnames(temp_df) = paste(indicator,ifold,sep = '-')
temp_df = sub_df[sub_df$fold==ifold,]
colnames(temp_df)[1] = paste(indicator,ifold,sep = '-')
temp_df
total_df = temp_df
total_df
total_df =  cbind(total_df,temp_df)
total_df
first_flag = TRUE
indicator = colnames(df)[i]
sub_df = df[,c(indicator,'fold')]
first_flag = TRUE
for(ifold in folds){
temp_df = sub_df[sub_df$fold==ifold,]
colnames(temp_df)[1] = paste(indicator,ifold,'fold',sep = '-')]
colnames(temp_df)[1] = paste(indicator,ifold,'fold',sep = '-')
first_flag = TRUE
for(ifold in folds){
temp_df = sub_df[sub_df$fold==ifold,]
colnames(temp_df)[1] = paste(indicator,ifold,'fold',sep = '-')
temp_df$fold = NULL
if(first_flag){
total_df = temp_df
first_flag = FALSE
}else{
total_df =  cbind(total_df,temp_df)
}
}
total_df
file_name = 'camel'
result_root = './result/temp/'
file.path(result_root,paste(file_name,'-',indicator,'.csv',sep = ''))
write.csv(total_df,file = file.path(result_root,paste(file_name,'-',indicator,'.csv',sep = '')),row.names = FALSE)
for(ifold in folds){
cat(ifold)
}
indicator = colnames(df)[i]
sub_df = df[,c(indicator,'fold')]
first_flag = TRUE
for(ifold in folds){
temp_df = sub_df[sub_df$fold==ifold,]
colnames(temp_df)[1] = paste(ifold,'fold',sep = '-')
temp_df$fold = NULL
if(first_flag){
total_df = temp_df
first_flag = FALSE
}else{
total_df =  cbind(total_df,temp_df)
}
}
write.csv(total_df,file = file.path(result_root,paste(file_name,'-',indicator,'.csv',sep = '')),row.names = FALSE)
i
2:ncol(df)-1
for(i in 2:ncol(df)-1){
indicator = colnames(df)[i]
sub_df = df[,c(indicator,'fold')]
first_flag = TRUE
for(ifold in folds){
temp_df = sub_df[sub_df$fold==ifold,]
colnames(temp_df)[1] = paste(ifold,'fold',sep = '-')
temp_df$fold = NULL
if(first_flag){
total_df = temp_df
first_flag = FALSE
}else{
total_df =  cbind(total_df,temp_df)
}
}
write.csv(total_df,file = file.path(result_root,paste(file_name,'-',indicator,'.csv',sep = '')),row.names = FALSE)
}
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
library(dplyr)
file_name = 'camel'
result_root = './result/temp/'
file_path = file.path('../moaGUIresult/camelDumpFile_delayedCV_10fold_detail.csv')
df = read.csv(file_path, check.names = FALSE)
df$fold = as.factor(df$fold)
folds = unique(df$fold)
for(i in 2:ncol(df)-1){
indicator = colnames(df)[i]
sub_df = df[,c(indicator,'fold')]
first_flag = TRUE
for(ifold in folds){
temp_df = sub_df[sub_df$fold==ifold,]
colnames(temp_df)[1] = paste(ifold,'fold',sep = '-')
temp_df$fold = NULL
if(first_flag){
total_df = temp_df
first_flag = FALSE
}else{
total_df =  cbind(total_df,temp_df)
}
}
write.csv(total_df,file = file.path(result_root,paste(file_name,'-',indicator,'.csv',sep = '')))
}
temp_df
colnames(df)[1]
sub_df = df[,c(colnames(df)[1],indicator,'fold')]
sub_df
temp_df = sub_df[sub_df$fold==ifold,]
temp_df
temp_df = sub_df[sub_df$fold==ifold,]
colnames(temp_df)[1] = paste(ifold,'fold',sep = '-')
temp_df = sub_df[sub_df$fold==ifold,]
temp_df
colnames(temp_df)[1] = paste(ifold,'fold',sep = '-')
temp_df$fold = NULL
temp_df
temp_df = sub_df[sub_df$fold==ifold,]
colnames(temp_df)[2] = paste(ifold,'fold',sep = '-')
temp_df
temp_df$fold = NULL
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
library(dplyr)
file_name = 'camel'
result_root = './result/temp/'
file_path = file.path('../moaGUIresult/camelDumpFile_delayedCV_10fold_detail.csv')
df = read.csv(file_path, check.names = FALSE)
df$fold = as.factor(df$fold)
folds = unique(df$fold)
for(i in 2:ncol(df)-1){
indicator = colnames(df)[i]
sub_df = df[,c(colnames(df)[1],indicator,'fold')]
first_flag = TRUE
for(ifold in folds){
temp_df = sub_df[sub_df$fold==ifold,]
colnames(temp_df)[2] = paste(ifold,'fold',sep = '-')
temp_df$fold = NULL
if(first_flag){
total_df = temp_df
first_flag = FALSE
}else{
temp_df$`learning evaluation instances on certain fold`=NULL
total_df =  cbind(total_df,temp_df)
}
}
write.csv(total_df,file = file.path(result_root,paste(file_name,'-',indicator,'.csv',sep = '')))
}
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
library(dplyr)
file_name = 'camel'
result_root = './result/temp/'
file_path = file.path('../moaGUIresult/camelDumpFile_delayedCV_10fold_detail.csv')
df = read.csv(file_path, check.names = FALSE)
df$fold = as.factor(df$fold)
folds = unique(df$fold)
for(i in 2:ncol(df)-1){
indicator = colnames(df)[i]
sub_df = df[,c(colnames(df)[1],indicator,'fold')]
first_flag = TRUE
for(ifold in folds){
temp_df = sub_df[sub_df$fold==ifold,]
colnames(temp_df)[2] = paste(ifold,'fold',sep = '-')
temp_df$fold = NULL
if(first_flag){
total_df = temp_df
first_flag = FALSE
}else{
temp_df$`learning evaluation instances on certain fold`=NULL
total_df =  cbind(total_df,temp_df)
}
}
write.csv(total_df,file = file.path(result_root,paste(file_name,'-',indicator,'.csv',sep = '')),row.names = FALSE)
}
